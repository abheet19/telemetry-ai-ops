name: CI - Telemetry AI Ops

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters
        run: pip install ruff black

      - name: Run Black formatter check
        run: black --check .

      - name: Run Ruff with auto-fix
        run: ruff check . --fix

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies
        run: pip install -r requirements.txt pytest pytest-asyncio pytest-cov pytest-xdist

      - name: Create .env file
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env

      - name: Run tests with coverage
        run: pytest -n auto --cov=app --cov-fail-under=85

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t telemetry-ai-ops .

      - name: Run Docker container and healthcheck
        run: |
          docker run -d -p 8000:8000 \
            -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --name telemetry-ai-ops telemetry-ai-ops
          sleep 8
          curl -f http://localhost:8000/health
          docker stop telemetry-ai-ops
          docker rm telemetry-ai-ops
